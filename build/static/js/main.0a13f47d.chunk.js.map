{"version":3,"sources":["Components/form.js","Components/todo.js","Components/todolist.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","gridSpacing","margin","spacing","formControl","minWidth","BootstrapInput","withStyles","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","InputBase","Form","inputText","setInputText","todos","setTodo","setState","classes","Grid","container","justify","alignItems","Paper","square","className","onSubmit","e","preventDefault","text","completed","id","uuidv4","item","TextField","label","value","onChange","target","type","FormControl","variant","NativeSelect","Todo","todo","Button","startIcon","onClick","map","filter","el","TodoList","App","useState","state","filteredTodos","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","direction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,OAAQF,EAAMG,QAAQ,IAExBC,YAAa,CACXC,SAAU,SAIRC,EAAiBC,aAAW,SAACP,GAAD,MAAY,CAC5CQ,MAAO,CACLC,aAAc,EACdC,SAAU,WACVC,gBAAiBX,EAAMY,QAAQC,WAAWC,MAC1CC,OAAQ,oBACRC,SAAU,GACVC,QAAS,sBACTC,WAAYlB,EAAMmB,YAAYC,OAAO,CAAC,eAAgB,eACtDC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACP,UAAW,CACTb,aAAc,OAtBGF,CAyBnBgB,KAsDWC,EApDF,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACjDC,EAAUhC,IAgBhB,OACE,cAACiC,EAAA,EAAD,CAAMC,WAAS,EACbC,QAAQ,SACRC,WAAW,SAFb,SAGE,cAACC,EAAA,EAAD,CACEC,QAAM,EACNC,UAAU,iBAFZ,SAGE,uBAAMC,SAlBc,SAAAC,GACxBA,EAAEC,iBACFZ,EAAQ,GAAD,mBAAKD,GAAL,CAAY,CAAEc,KAAMhB,EAAWiB,WAAW,EAAOC,GAAIC,kBAE5DlB,EAAa,KAcT,UACE,cAACK,EAAA,EAAD,CAAMc,MAAI,EAACR,UAAWP,EAAQ7B,YAA9B,SACE,cAAC6C,EAAA,EAAD,CACEH,GAAG,iBACHI,MAAM,OACNC,MAAOvB,EACPwB,SA5Ba,SAACV,GACxBb,EAAaa,EAAEW,OAAOF,QA4BZG,KAAK,WAGT,cAACpB,EAAA,EAAD,CAAMc,MAAI,EAACR,UAAWP,EAAQ7B,YAA9B,SACE,cAACmD,EAAA,EAAD,CAAaC,QAAQ,WAAWhB,UAAWP,EAAQ1B,YAAnD,SACE,eAACkD,EAAA,EAAD,CACEP,MAAM,QACNE,SAzBO,SAACV,GACpBV,EAASU,EAAEW,OAAOF,QAyBNxC,MAAO,cAACF,EAAD,IAHT,UAIE,wBAAQ0C,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,wC,mDCnDDO,EAhCF,SAAC,GAAoC,IAAlC3B,EAAiC,EAAjCA,QAAS4B,EAAwB,EAAxBA,KAAM7B,EAAkB,EAAlBA,MAAOc,EAAW,EAAXA,KAapC,OACE,qCACE,oBAAIJ,UAAS,oBAAemB,EAAKd,UAAY,YAAc,IAA3D,SACGD,IAEH,sBAAKJ,UAAU,aAAf,UACE,cAACoB,EAAA,EAAD,CACEC,UAAW,cAAC,IAAD,IACXC,QAjBgB,WACtB/B,EACED,EAAMiC,KAAI,SAACf,GACT,OAAOA,EAAKF,KAAOa,EAAKb,GAAjB,2BACEE,GADF,IACQH,WAAYG,EAAKH,YAC5BG,SAcJ,cAACY,EAAA,EAAD,CACEC,UAAW,cAAC,IAAD,IACXC,QAxBa,WACnB/B,EAAQD,EAAMkC,QAAO,SAACC,GAAD,OAAQA,EAAGnB,KAAOa,EAAKb,iBCiBjCoB,EAnBE,SAAC,GAAwB,IAAtBpC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACzB,OACE,cAACG,EAAA,EAAD,CAAMC,WAAS,EACbC,QAAQ,SACRC,WAAW,SAASG,UAAU,qBAFhC,SAGGV,EAAMiC,KAAI,SAAAJ,GAAI,OACb,cAACrB,EAAA,EAAD,CAAOC,QAAM,EAACC,UAAU,iBAAxB,SACE,cAAC,EAAD,CACET,QAASA,EACT4B,KAAMA,EACN7B,MAAOA,EACPc,KAAMe,EAAKf,MACNe,EAAKb,YCsDPqB,MAjEf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNxC,EADM,KACKC,EADL,OAEYuC,mBAAS,IAFrB,mBAENtC,EAFM,KAECC,EAFD,OAGaqC,mBAAS,OAHtB,mBAGNC,EAHM,KAGCrC,EAHD,OAI6BoC,mBAAS,IAJtC,mBAINE,EAJM,KAISC,EAJT,KAMbC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACRE,IACAC,MACC,CAAC7C,EAAOuC,IAEX,IAAMK,EAAgB,WACpB,OAAQL,GACN,IAAK,YACHE,EAAiBzC,EAAMkC,QAAO,SAAAL,GAAI,OAAuB,IAAnBA,EAAKd,cAC3C,MACF,IAAK,cACH0B,EAAiBzC,EAAMkC,QAAO,SAAAL,GAAI,OAAuB,IAAnBA,EAAKd,cAC3C,MACF,QACE0B,EAAiBzC,KAKjB6C,EAAiB,WACrBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUjD,KAGzC2C,EAAgB,WACpB,GAAsC,OAAlCG,aAAaI,QAAQ,SACvBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACL,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChDjD,EAAQkD,KAIZ,OACE,mCACE,eAAC/C,EAAA,EAAD,CAAMC,WAAS,EACbK,UAAU,mBACV2C,UAAU,SACV/C,QAAQ,SACRC,WAAW,SAJb,UAKE,cAACH,EAAA,EAAD,CAAMc,MAAI,EAAV,SACE,6CAEF,cAAC,EAAD,CACEpB,UAAWA,EACXE,MAAOA,EACPC,QAASA,EACTF,aAAcA,EACdG,SAAUA,IAEZ,cAAC,EAAD,CAAUD,QAASA,EAASD,MAAOwC,UCrD5Bc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a13f47d.chunk.js","sourcesContent":["import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst useStyles = makeStyles((theme) => ({\n  gridSpacing: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    minWidth: 120,\n  },\n}));\n\nconst BootstrapInput = withStyles((theme) => ({\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 2,\n    },\n  },\n}))(InputBase);\n\nconst Form = ({ inputText, setInputText, todos, setTodo, setState }) => {\n  const classes = useStyles();\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const submitTodoHandler = e => {\n    e.preventDefault();\n    setTodo([...todos, { text: inputText, completed: false, id: uuidv4() },\n    ]);\n    setInputText(\"\");\n  };\n\n  const stateHandler = (e) => {\n    setState(e.target.value);\n  }\n\n  return (\n    <Grid container\n      justify=\"center\"\n      alignItems=\"center\">\n      <Paper\n        square\n        className=\"form-container\">\n        <form onSubmit={submitTodoHandler}>\n          <Grid item className={classes.gridSpacing}>\n            <TextField\n              id=\"standard-basic\"\n              label=\"Todo\"\n              value={inputText}\n              onChange={inputTextHandler}\n              type=\"text\"\n            />\n          </Grid>\n          <Grid item className={classes.gridSpacing}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <NativeSelect\n                label=\"State\"\n                onChange={stateHandler}\n                input={<BootstrapInput />}>\n                <option value=\"all\">All</option>\n                <option value=\"completed\">Completed</option>\n                <option value=\"uncompleted\">Uncompleted</option>\n              </NativeSelect>\n            </FormControl>\n          </Grid>\n        </form>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst Todo = ({ setTodo, todo, todos, text }) => {\n  const deletHandler = () => {\n    setTodo(todos.filter((el) => el.id !== todo.id));\n  };\n  const completeHandler = () => {\n    setTodo(\n      todos.map((item) => {\n        return item.id === todo.id\n          ? { ...item, completed: !item.completed }\n          : item;\n      })\n    );\n  };\n  return (\n    <>\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\n        {text}\n      </li>\n      <div className=\"group-btns\">\n        <Button\n          startIcon={<CheckIcon />}\n          onClick={completeHandler}>\n        </Button>\n        <Button\n          startIcon={<ClearIcon />}\n          onClick={deletHandler}>\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Todo from './todo';\n\nconst TodoList = ({ todos, setTodo }) => {\n  return (\n    <Grid container\n      justify=\"center\"\n      alignItems=\"center\" className=\"todolist-container\">\n      {todos.map(todo => (\n        <Paper square className=\"todo-container\">\n          <Todo\n            setTodo={setTodo}\n            todo={todo}\n            todos={todos}\n            text={todo.text}\n            key={todo.id} />\n        </Paper>\n      ))}\n    </Grid>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\"\nimport Form from \"./Components/form\";\nimport TodoList from \"./Components/todolist\";\nimport Grid from '@material-ui/core/Grid';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodo] = useState([]);\n  const [state, setState] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, state]);\n\n  const filterHandler = () => {\n    switch (state) {\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodo(todoLocal);\n    }\n  }\n\n  return (\n    <>\n      <Grid container\n        className=\"outter-container\"\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\">\n        <Grid item>\n          <h1>Todo List</h1>\n        </Grid>\n        <Form\n          inputText={inputText}\n          todos={todos}\n          setTodo={setTodo}\n          setInputText={setInputText}\n          setState={setState}\n        />\n        <TodoList setTodo={setTodo} todos={filteredTodos} />\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}